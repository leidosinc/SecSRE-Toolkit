# -----------------------------------------------------------------------------
# #  LEIDOS PROPRIETARY INFORMATION
# # 
# #  Proprietary information owned by LEIDOS that requires protection
# #  from unauthorized disclosure.
# # 
# #  2021 LEIDOS
# # -----------------------------------------------------------------------------
# #  Mission IT Applications and Frameworks
# # 
# #  POCs:
# #  Jenna Martins jenna.n.martins@leidos.com
# #  Andrew Stein andrew.w.stein@leidos.com
# # 
# #  Authors:
# #  Heidi Harris heidi.l.gray@leidos.com
# #  James Seeman james.seeman@leidos.com
# #  Dorian Mabrey dorian.n.mabrey@leidos.com
# # 
# #  COTS/FOSS SW Dependencies:
# #  Nginx
# #  Flask
# #  Grafana
# #  Prometheus
# #  Kibana

---
- name: configure prometheus
  template:
   src: prometheus.yml
   dest: "{{ prometheus_config_dir }}/prometheus.yml"
   mode: 0640

- name: copy prometheus libraries
  copy:
   src: "/tmp/prometheus-{{ prometheus_version }}.{{ prometheus_arch }}/{{ item }}"
   dest: "{{ prometheus_config_dir }}"
   mode: 0640
   remote_src: true
  with_items:
   - console_libraries
   - consoles

- name: copy client cert
  copy:
   src: client_certs.crt
   dest: /etc/nginx/ssl/client_certs.crt

- name: add vhost to nginx
  lineinfile:
   path: /etc/nginx/nginx.conf
   insertafter: '^http {'
   line: |
     server {
       listen        {{ prometheus_nginx_port }} ssl;
       server_name   {{ prometheus_nginx_server_name }};
       ssl   on;
       ssl_certificate       /etc/nginx/ssl/nginx-selfsigned.crt;
       ssl_certificate_key   /etc/nginx/ssl/nginx-selfsigned.key;
       ssl_verify_depth      2;

       ssl_client_certificate /etc/nginx/ssl/client_certs.crt;
       ssl_verify_client     optional;
     
       location = /auth {
         internal;
         proxy_pass  http://127.0.0.1:{{ flask_port }};
         proxy_pass_request_body off;
         proxy_set_header        Content-Length "";
         proxy_set_header        X-Original-URI $request_uri;
         proxy_set_header        X-SSL-CERT $ssl_client_cert;
         proxy_set_header        X-Client-DN $ssl_client_s_dn;
         proxy_set_header        X-Client-DN-CN $ssl_client_s_dn_cn;
       }
     
       location / {
         auth_request        /auth;
         proxy_pass          http://localhost:3000;
         proxy_set_header    X-Client-DN-CN $ssl_client_s_dn_cn;
     
         if ($ssl_client_verify != SUCCESS) {
           return 403;
         }
       }
     }
   state: present

- name: restart nginx
  service:
    name: nginx
    state: restarted
